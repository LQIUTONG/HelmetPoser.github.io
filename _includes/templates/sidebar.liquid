{% include common/rest/defaults.liquid %}

<div class="sidebar-wrap overflow-hidden">
    <div class="sidebar height-full overflow-y-scroll overflow-x-hidden">
        <div class="header d-flex flex-column p-3 text-center">
            <div class="title pb-1">
                <a class="h4 no-underline py-1 px-2 rounded-1" href="{{ site.baseurl }}/" title="{{ site.description }}">
                    <i class="fa fa-home"></i> {{ site.title }}
                </a>
            </div>
            <form class="search pt-2" action="{{ site.baseurl }}/search.html" method="get" autocomplete="off">
                <input class="form-control input-block input-sm" type="text" name="q" placeholder="Search...">
            </form>
        </div>
        <div class="toctree py-2" data-spy="affix" role="navigation" aria-label="main navigation">
            <!-- 标准侧边栏导航 -->
            {% include templates/toctree.liquid %}
            
            <div class="outline-title py-2 px-3 text-uppercase">Outline</div>
            <div id="toc-container" class="px-2">
                <ul id="toc" class="toc-list list-unstyled">
                    <li><a href="#introduction" class="d-block py-1 text-truncate toc-h2 pl-3">Introduction</a></li>
                    <li><a href="#demonstration-video" class="d-block py-1 text-truncate toc-h2 pl-3">Demonstration Video</a></li>
                    <li><a href="#dataset-downloads" class="d-block py-1 text-truncate toc-h2 pl-3">Dataset Downloads</a></li>
                    <li><a href="#notes" class="d-block py-1 text-truncate toc-h2 pl-3">Notes</a></li>
                    <li><a href="#citation" class="d-block py-1 text-truncate toc-h2 pl-3">Citation</a></li>
                    <li><a href="#licence" class="d-block py-1 text-truncate toc-h2 pl-3">Licence</a></li>
                </ul>
            </div>
        </div>
    </div>
</div>

<script>
// 页面加载完成后执行
window.addEventListener('load', function() {
    // 设置手动目录点击事件和高亮
    setupManualToc();
    
    // 添加滚动监听，高亮当前章节
    window.addEventListener('scroll', highlightCurrentSection);
    
    // 更新调试信息
    document.getElementById('debug-info').innerHTML = 
        '<p>页面已加载完成 ' + new Date().toLocaleTimeString() + '</p>' +
        '<p>版本: v1.2.1</p>';
});

// 设置手动添加的目录链接
function setupManualToc() {
    var tocLinks = document.querySelectorAll('#toc a');
    tocLinks.forEach(function(link) {
        link.addEventListener('click', function(e) {
            e.preventDefault();
            
            // 获取目标ID
            var targetId = this.getAttribute('href').substring(1);
            var targetElement = document.getElementById(targetId);
            
            // 如果找到了目标元素，滚动到其位置
            if (targetElement) {
                targetElement.scrollIntoView({
                    behavior: 'smooth',
                    block: 'start'
                });
                
                // 更新URL的hash
                history.pushState(null, null, '#' + targetId);
                
                // 更新调试信息
                document.getElementById('debug-info').innerHTML = 
                    '<p>成功滚动到: ' + targetId + '</p>' +
                    '<p>时间: ' + new Date().toLocaleTimeString() + '</p>';
            } else {
                // 显示错误信息
                document.getElementById('debug-info').innerHTML = 
                    '<p>⚠️ 找不到元素: ' + targetId + '</p>' +
                    '<p>尝试直接滚动到相应文本</p>';
                
                // 备用方案：查找包含相似文本的元素
                var heading = findHeadingByText(this.textContent);
                if (heading) {
                    heading.scrollIntoView({
                        behavior: 'smooth',
                        block: 'start'
                    });
                    document.getElementById('debug-info').innerHTML += '<p>找到并滚动到相似文本</p>';
                }
            }
            
            // 清除其他高亮
            tocLinks.forEach(function(l) { l.classList.remove('active', 'bg-theme-light'); });
            
            // 添加当前项高亮
            this.classList.add('active', 'bg-theme-light');
        });
    });
}

// 通过文本内容查找标题
function findHeadingByText(text) {
    var allElements = document.querySelectorAll('h1, h2, h3, h4, h5, h6');
    for (var i = 0; i < allElements.length; i++) {
        if (allElements[i].textContent.includes(text) || 
            text.includes(allElements[i].textContent)) {
            return allElements[i];
        }
    }
    return null;
}

// 高亮当前章节函数
function highlightCurrentSection() {
    var headings = document.querySelectorAll('h1, h2, h3, h4, h5, h6');
    var tocLinks = document.querySelectorAll('#toc a');
    var scrollPosition = window.scrollY;
    
    // 寻找当前视图中的标题
    var currentHeading = null;
    
    headings.forEach(function(heading) {
        var headingTop = heading.offsetTop;
        if (headingTop - 100 <= scrollPosition) {
            currentHeading = heading;
        }
    });
    
    // 清除所有高亮
    tocLinks.forEach(function(link) {
        link.classList.remove('active', 'bg-theme-light');
    });
    
    // 高亮当前章节
    if (currentHeading) {
        // 尝试通过ID匹配
        var currentId = currentHeading.id;
        var currentLink = document.querySelector('#toc a[href="#' + currentId + '"]');
        
        // 如果找不到匹配的链接，尝试通过文本内容匹配
        if (!currentLink) {
            tocLinks.forEach(function(link) {
                if (link.textContent.includes(currentHeading.textContent) || 
                    currentHeading.textContent.includes(link.textContent)) {
                    currentLink = link;
                }
            });
        }
        
        if (currentLink) {
            currentLink.classList.add('active', 'bg-theme-light');
        }
    }
}
</script>

<style>
.outline-title {
    font-size: 14px;
    font-weight: 600;
    color: #a0a0a0;
    border-top: 1px solid rgba(255, 255, 255, 0.1);
    margin-top: 10px;
}

#toc-container {
    max-height: 300px;
    overflow-y: auto;
}

.toc-list a {
    color: rgba(255, 255, 255, 0.8);
    font-size: 13px;
    text-decoration: none;
}

.toc-list a:hover {
    color: white;
    background-color: rgba(255, 255, 255, 0.1);
}

.toc-list a.active {
    color: white;
    font-weight: 600;
}

.toc-h1 { font-weight: 600; }
.toc-h2 { padding-left: 10px; }
.toc-h3 { padding-left: 20px; }
.toc-h4 { padding-left: 30px; }

/* 调试信息区域样式 */
#debug-info {
    background-color: rgba(0, 0, 0, 0.2);
    padding: 8px;
    border-radius: 4px;
    margin-top: 15px;
    font-family: monospace;
}
</style>
