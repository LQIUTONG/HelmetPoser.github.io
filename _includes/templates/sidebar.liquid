{% include common/rest/defaults.liquid %}

<div class="sidebar-wrap overflow-hidden">
    <div class="sidebar height-full overflow-y-scroll overflow-x-hidden">
        <div class="header d-flex flex-column p-3 text-center">
            <div class="title pb-1">
                <a class="h4 no-underline py-1 px-2 rounded-1" href="{{ site.baseurl }}/" title="{{ site.description }}">
                    <i class="fa fa-home"></i> {{ site.title }}
                </a>
            </div>
            <form class="search pt-2" action="{{ site.baseurl }}/search.html" method="get" autocomplete="off">
                <input class="form-control input-block input-sm" type="text" name="q" placeholder="搜索...">
            </form>
        </div>
        <div class="toctree py-2" data-spy="affix" role="navigation" aria-label="main navigation">
            <!-- 标准侧边栏导航 -->
            {% include templates/toctree.liquid %}
            
            <!-- 自动生成的目录大纲 -->
            <div class="outline-title py-2 px-3 text-uppercase">目录导航</div>
            <div id="toc-container" class="px-2">
                <ul id="toc" class="toc-list list-unstyled">
                    <li><em>加载中...</em></li>
                </ul>
            </div>
        </div>
    </div>
</div>

<script>
// 页面加载完成后执行
window.addEventListener('load', function() {
    setTimeout(function() {
        // 自动生成大纲
        generateTableOfContents();
        
        // 添加滚动监听，高亮当前章节
        window.addEventListener('scroll', highlightCurrentSection);
    }, 1000); // 延迟1000ms确保DOM完全加载
});

// 生成目录函数
function generateTableOfContents() {
    console.log("开始生成目录...");
    
    // 使用更多选择器尝试查找主内容区域
    var contentSelectors = [
        '.main',                 // 标准主内容
        '.markdown-body',        // GitHub风格markdown
        '.main-content',         // 通用主内容
        'article',               // 文章标签
        'main',                  // 主标签
        '.content',              // 内容类
        '#readme',               // README ID
        '.readme'                // README 类
    ];
    
    var mainContent = null;
    for (var i = 0; i < contentSelectors.length; i++) {
        var element = document.querySelector(contentSelectors[i]);
        if (element) {
            console.log("找到内容区域:", contentSelectors[i]);
            mainContent = element;
            break;
        }
    }
    
    // 如果仍然找不到主内容，尝试直接使用body或获取所有标题
    if (!mainContent) {
        console.log("未找到主内容区域，使用document.body");
        mainContent = document.body;
    }
    
    // 查找所有标题元素
    var headings = mainContent.querySelectorAll('h1, h2, h3, h4, .markdown-heading');
    console.log("找到标题数量:", headings.length);
    
    var toc = document.getElementById('toc');
    if (!toc) {
        console.error("找不到目录容器#toc");
        return;
    }
    
    // 清空加载中提示
    toc.innerHTML = '';
    
    // 如果找不到标题，显示提示并打印页面结构以帮助调试
    if (headings.length === 0) {
        console.log("页面结构:", document.body.innerHTML.substring(0, 500)); // 打印页面前500个字符
        var li = document.createElement('li');
        li.innerHTML = '<em>内容中没有找到标题元素</em>';
        toc.appendChild(li);
        
        // 尝试直接从页面中获取标题文本
        var possibleHeadings = [];
        var allElements = document.querySelectorAll('*');
        for (var i = 0; i < allElements.length; i++) {
            var el = allElements[i];
            if (el.textContent && el.textContent.trim() && 
                (el.tagName === 'H1' || el.tagName === 'H2' || el.tagName === 'H3' || el.tagName === 'H4' ||
                 el.className.includes('title') || el.className.includes('heading'))) {
                possibleHeadings.push(el);
            }
        }
        
        if (possibleHeadings.length > 0) {
            console.log("找到可能的标题元素:", possibleHeadings.length);
            headings = possibleHeadings;
        } else {
            return;
        }
    }
    
    // 以下是生成目录的代码
    headings.forEach(function(heading, index) {
        // 跳过空标题
        if (!heading.textContent.trim()) return;
        
        // 为每个标题创建ID，如果没有的话
        if (!heading.id) {
            var id = 'heading-' + index;
            heading.id = id;
        }
        
        var li = document.createElement('li');
        var a = document.createElement('a');
        a.textContent = heading.textContent.trim();
        a.setAttribute('href', '#' + heading.id);
        a.classList.add('d-block', 'py-1', 'text-truncate');
        
        // 设置不同级别标题的样式
        if (heading.tagName === 'H1') {
            a.classList.add('toc-h1');
        } else if (heading.tagName === 'H2') {
            a.classList.add('toc-h2', 'pl-3');
        } else if (heading.tagName === 'H3') {
            a.classList.add('toc-h3', 'pl-4');
        } else if (heading.tagName === 'H4') {
            a.classList.add('toc-h4', 'pl-5');
        } else {
            // 其他元素，可能是具有标题样式的div等
            a.classList.add('toc-h2', 'pl-3');
        }
        
        // 添加点击事件
        a.addEventListener('click', function(e) {
            e.preventDefault();
            
            // 平滑滚动到目标位置
            document.getElementById(heading.id).scrollIntoView({
                behavior: 'smooth',
                block: 'start'
            });
            
            // 更新URL的hash
            history.pushState(null, null, '#' + heading.id);
        });
        
        li.appendChild(a);
        toc.appendChild(li);
    });
    
    console.log("目录生成完成");
}

// 高亮当前章节函数
function highlightCurrentSection() {
    var headings = document.querySelectorAll('h1[id], h2[id], h3[id], h4[id], .markdown-heading[id]');
    var tocLinks = document.querySelectorAll('#toc a');
    var scrollPosition = window.scrollY;
    
    // 寻找当前视图中的标题
    var currentHeading = null;
    
    headings.forEach(function(heading) {
        var headingTop = heading.offsetTop;
        if (headingTop - 100 <= scrollPosition) {
            currentHeading = heading;
        }
    });
    
    // 清除所有高亮
    tocLinks.forEach(function(link) {
        link.classList.remove('active');
    });
    
    // 高亮当前章节
    if (currentHeading) {
        var currentLink = document.querySelector('#toc a[href="#' + currentHeading.id + '"]');
        if (currentLink) {
            currentLink.classList.add('active', 'bg-theme-light');
        }
    }
}
</script>

<style>
.outline-title {
    font-size: 14px;
    font-weight: 600;
    color: #a0a0a0;
    border-top: 1px solid rgba(255, 255, 255, 0.1);
    margin-top: 10px;
}

#toc-container {
    max-height: 300px;
    overflow-y: auto;
}

.toc-list a {
    color: rgba(255, 255, 255, 0.8);
    font-size: 13px;
    text-decoration: none;
}

.toc-list a:hover {
    color: white;
    background-color: rgba(255, 255, 255, 0.1);
}

.toc-list a.active {
    color: white;
    font-weight: 600;
}

.toc-h1 { font-weight: 600; }
.toc-h2 { padding-left: 10px; }
.toc-h3 { padding-left: 20px; }
.toc-h4 { padding-left: 30px; }
</style>
